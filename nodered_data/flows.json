[{"id":"dd36c88f.3e1418","type":"tab","label":"Smart Meter Flow","disabled":false,"info":""},{"id":"60557c07.c3c7a4","type":"graphql-server","endpoint":"http://sendlab.nl:14000/","name":"Sendlab"},{"id":"fa95aa9.b0ac158","type":"ui_group","name":"Main","tab":"66ddd300.ac33bc","order":1,"disp":false,"width":"19","collapse":false},{"id":"66ddd300.ac33bc","type":"ui_tab","name":"Meter selection","icon":"fa-bolt","order":1,"disabled":false,"hidden":false},{"id":"dc3e36a9.937fb8","type":"ui_base","theme":{"name":"theme-dark","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#c6002a","baseFont":"Arial,Arial,Helvetica,sans-serif","edited":true,"reset":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#000000","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","reset":false},"themeState":{"base-color":{"default":"#097479","value":"#c6002a","edited":true},"page-titlebar-backgroundColor":{"value":"#c6002a","edited":false},"page-backgroundColor":{"value":"#111111","edited":false},"page-sidebar-backgroundColor":{"value":"#333333","edited":false},"group-textColor":{"value":"#ff1345","edited":false},"group-borderColor":{"value":"#555555","edited":false},"group-backgroundColor":{"value":"#333333","edited":false},"widget-textColor":{"value":"#eeeeee","edited":false},"widget-backgroundColor":{"value":"#c6002a","edited":false},"widget-borderColor":{"value":"#333333","edited":false},"base-font":{"value":"Arial,Arial,Helvetica,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey","palette":"light"}},"site":{"name":"Node-RED Dashboard","hideToolbar":"false","allowSwipe":"false","lockMenu":"true","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"9fdc2f01.41d66","type":"mqtt-broker","name":"smart meter","broker":"sendlab.nl","port":"11884","clientid":"","usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willPayload":"","willMsg":{},"sessionExpiry":""},{"id":"8924e22f.e375e","type":"ui_group","name":"RecentRecords","tab":"","order":1,"disp":false,"width":25,"collapse":false},{"id":"ac6abc41.ca2be","type":"ui_spacer","name":"spacer","group":"8924e22f.e375e","order":1,"width":2,"height":1},{"id":"a8d0e612.0d6848","type":"ui_spacer","name":"spacer","group":"8924e22f.e375e","order":3,"width":2,"height":1},{"id":"6a09dadd.fcfc14","type":"ui_spacer","name":"spacer","group":"8924e22f.e375e","order":4,"width":2,"height":1},{"id":"df68163b.832ee8","type":"ui_spacer","name":"spacer","group":"8924e22f.e375e","order":5,"width":2,"height":1},{"id":"d5c69de0.fa54c","type":"ui_tab","name":"Recent Records","icon":"fa-clock-o","order":2,"disabled":false,"hidden":false},{"id":"4dfd7862.056cd8","type":"ui_group","name":"Group 1","tab":"d5c69de0.fa54c","order":1,"disp":false,"width":19,"collapse":false},{"id":"7a25f83.bb12b08","type":"ui_tab","name":"Calender records","icon":"date_range","order":3,"disabled":false,"hidden":false},{"id":"5184e762.96d8f8","type":"ui_group","name":"Group 1","tab":"7a25f83.bb12b08","order":1,"disp":false,"width":19,"collapse":false},{"id":"e6d0e86e.5f32d8","type":"mqtt-broker","name":"","broker":"coolsmabox.synology.me","port":"11883","clientid":"","usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willPayload":"","willMsg":{},"sessionExpiry":""},{"id":"320e11a1.157efe","type":"ui_tab","name":"Live feed","icon":"fa-spinner","order":4,"disabled":false,"hidden":false},{"id":"1051950f.02d58b","type":"ui_group","name":"Group 1","tab":"320e11a1.157efe","order":1,"disp":false,"width":"19","collapse":false},{"id":"7ed72f89.2c692","type":"ui_spacer","name":"spacer","group":"1051950f.02d58b","order":1,"width":4,"height":1},{"id":"b46049dc.bba518","type":"ui_spacer","name":"spacer","group":"1051950f.02d58b","order":3,"width":4,"height":1},{"id":"c395a012.81b0c","type":"ui_spacer","name":"spacer","group":"1051950f.02d58b","order":4,"width":4,"height":1},{"id":"31f9868c.e6af8a","type":"ui_spacer","name":"spacer","group":"1051950f.02d58b","order":6,"width":15,"height":1},{"id":"632d1247.3c043c","type":"ui_spacer","name":"spacer","group":"5184e762.96d8f8","order":1,"width":5,"height":1},{"id":"9ff04cd9.c1c97","type":"ui_spacer","name":"spacer","group":"5184e762.96d8f8","order":3,"width":5,"height":1},{"id":"acd2d8a0.731e08","type":"ui_spacer","name":"spacer","group":"5184e762.96d8f8","order":4,"width":5,"height":1},{"id":"71630285.11bb7c","type":"ui_spacer","name":"spacer","group":"5184e762.96d8f8","order":5,"width":1,"height":1},{"id":"1ebc5b86.fd2264","type":"ui_spacer","name":"spacer","group":"5184e762.96d8f8","order":7,"width":3,"height":1},{"id":"e22fbf1b.ff742","type":"ui_spacer","name":"spacer","group":"5184e762.96d8f8","order":9,"width":1,"height":1},{"id":"a75d28b7.f60788","type":"ui_spacer","name":"spacer","group":"5184e762.96d8f8","order":11,"width":1,"height":1},{"id":"1b71fcbc.eb2103","type":"ui_spacer","name":"spacer","group":"5184e762.96d8f8","order":13,"width":3,"height":1},{"id":"f7d60897.fd2f08","type":"ui_spacer","name":"spacer","group":"5184e762.96d8f8","order":15,"width":1,"height":1},{"id":"79dd992b.7a5938","type":"ui_spacer","name":"spacer","group":"5184e762.96d8f8","order":17,"width":1,"height":1},{"id":"6da895c7.d8de2c","type":"ui_spacer","name":"spacer","group":"5184e762.96d8f8","order":19,"width":4,"height":1},{"id":"ab4dd18f.9ac88","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":1,"width":4,"height":1},{"id":"60fb8399.550f5c","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":3,"width":4,"height":1},{"id":"ae72fccb.db233","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":4,"width":4,"height":1},{"id":"ae7cc6c2.3d4128","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":6,"width":4,"height":1},{"id":"522dbea4.f4db4","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":8,"width":4,"height":1},{"id":"31e83d9c.408f42","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":10,"width":4,"height":1},{"id":"40427e47.cf56a","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":11,"width":1,"height":1},{"id":"994ac5d2.2832c8","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":13,"width":1,"height":1},{"id":"af92f0ed.84bcc","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":15,"width":1,"height":1},{"id":"aacab976.19a2e8","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":16,"width":1,"height":1},{"id":"cd269b48.f47b08","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":17,"width":1,"height":1},{"id":"24bbda87.8adb16","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":18,"width":1,"height":1},{"id":"2b3c5786.1788b8","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":19,"width":1,"height":1},{"id":"b77d9b72.3ca5d8","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":20,"width":1,"height":1},{"id":"f950fcca.29ab6","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":21,"width":1,"height":1},{"id":"6b07944a.eaa21c","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":22,"width":1,"height":1},{"id":"5fd2d59b.ac157c","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":23,"width":1,"height":1},{"id":"422f4aee.b1f334","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":24,"width":1,"height":1},{"id":"dd097b82.0ccab8","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":25,"width":1,"height":1},{"id":"e34218f8.e58a48","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":26,"width":1,"height":1},{"id":"1eeb2a42.21c116","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":27,"width":1,"height":1},{"id":"34b74393.0768ac","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":28,"width":1,"height":1},{"id":"8878b144.c122b","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":30,"width":1,"height":1},{"id":"b0aedc19.12323","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":32,"width":1,"height":1},{"id":"98329142.318e2","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":33,"width":1,"height":1},{"id":"e9e19783.11bbc8","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":34,"width":1,"height":1},{"id":"6ff0a63c.d73fa8","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":35,"width":1,"height":1},{"id":"43b2db8c.039f64","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":36,"width":1,"height":1},{"id":"9ae204c.cee96f8","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":37,"width":1,"height":1},{"id":"ce560b08.c75578","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":38,"width":1,"height":1},{"id":"aa17f4dc.3560a8","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":39,"width":1,"height":1},{"id":"29c62c9b.e5fc54","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":40,"width":1,"height":1},{"id":"5c6969c0.1576c8","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":41,"width":1,"height":1},{"id":"28d9fabb.c430b6","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":42,"width":1,"height":1},{"id":"2ab3f6bc.dc0bda","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":43,"width":1,"height":1},{"id":"87d7270b.f27d38","type":"ui_spacer","name":"spacer","group":"fa95aa9.b0ac158","order":44,"width":1,"height":1},{"id":"43c3b336.a5fefc","type":"ui_spacer","name":"spacer","group":"4dfd7862.056cd8","order":1,"width":5,"height":1},{"id":"3b539568.6f0aea","type":"ui_spacer","name":"spacer","group":"4dfd7862.056cd8","order":3,"width":5,"height":1},{"id":"ba91e384.49614","type":"ui_spacer","name":"spacer","group":"4dfd7862.056cd8","order":4,"width":5,"height":1},{"id":"46fc978f.3646a8","type":"ui_spacer","name":"spacer","group":"4dfd7862.056cd8","order":5,"width":1,"height":1},{"id":"23c1cbc0.35c154","type":"ui_spacer","name":"spacer","group":"4dfd7862.056cd8","order":7,"width":5,"height":1},{"id":"793e5e38.8d22d","type":"ui_spacer","name":"spacer","group":"4dfd7862.056cd8","order":9,"width":1,"height":1},{"id":"95257ba0.206178","type":"ui_spacer","name":"spacer","group":"4dfd7862.056cd8","order":11,"width":1,"height":1},{"id":"8b286cce.db561","type":"ui_spacer","name":"spacer","group":"4dfd7862.056cd8","order":12,"width":10,"height":1},{"id":"46bcf4b2.1d1c8c","type":"ui_spacer","name":"spacer","group":"4dfd7862.056cd8","order":14,"width":5,"height":1},{"id":"8cb09a82.bc17a8","type":"ui_spacer","name":"spacer","group":"4dfd7862.056cd8","order":15,"width":19,"height":1},{"id":"2f9aa94f.6d75e6","type":"graphql","z":"dd36c88f.3e1418","name":"getAvailableMeters","graphql":"60557c07.c3c7a4","format":"handlebars","syntax":"mustache","template":"{\n  getAvailableMeters\n}\n","x":330,"y":180,"wires":[["4120f435.74766c","762201d9.32ab3"],[]],"info":"Graphql request die een lijst met alle unieke signatures teruggeeft."},{"id":"4569aca2.aa2fd4","type":"ui_button","z":"dd36c88f.3e1418","name":"","group":"fa95aa9.b0ac158","order":7,"width":11,"height":1,"passthru":false,"label":"Get available meters","tooltip":"","color":"","bgcolor":"","icon":"","payload":"[]","payloadType":"json","topic":"payload","topicType":"msg","x":130,"y":180,"wires":[["2f9aa94f.6d75e6","f10367db.5a65b8"]],"info":"Knop die een Graphql request start om alle verschillende meters op te halen"},{"id":"f47f2f97.64e75","type":"ui_dropdown","z":"dd36c88f.3e1418","name":"Show Available Meters","label":"Pick a smartMeter:","tooltip":"Please select a smartmeter","place":"","group":"fa95aa9.b0ac158","order":9,"width":11,"height":1,"passthru":true,"multiple":false,"options":[],"payload":"","topic":"meter","topicType":"flow","x":120,"y":260,"wires":[["466af875.c313c8"]],"info":"Dropdown die gevult wordt met lijst van unieke meters. Deze wordt gevult met msg.options ipv de gerbruikelijke msg.payload."},{"id":"a13a2d2d.9f8e1","type":"mqtt in","z":"dd36c88f.3e1418","name":"Smart meter data","topic":"smartmeter/data","qos":"0","datatype":"json","broker":"9fdc2f01.41d66","nl":false,"rap":true,"rh":0,"x":410,"y":360,"wires":[["c0f67677.d41a38","9593926.d7a7c7","935f94d1.e6fb18"]],"info":"Verbinding met de MQTT server, geeft een bericht af wanneer er nieuwe data op het gevraagde topic binnen komt. In dit geval zal dit een melding geven wanneer er een nieuwe meting binnen is."},{"id":"4120f435.74766c","type":"ui_toast","z":"dd36c88f.3e1418","position":"top right","displayTime":"5","highlight":"Green","sendall":false,"outputs":0,"ok":"OK","cancel":"","raw":true,"topic":"Fetched Available Meters","name":"Fetched Available Meters","x":1970,"y":60,"wires":[]},{"id":"762201d9.32ab3","type":"function","z":"dd36c88f.3e1418","name":"Create meter dropdownlist + flow variables","func":"//Dropdown only accepts msg.options to be filled\n//payload array items get transformed into option items\n\nflow.set(\"onlineMeters\", []);\nmsg.options = [];//create empty array\nlet i;\nfor(i = 0; i < msg.payload.getAvailableMeters.length; i++){\n    msg.options.push(msg.payload.getAvailableMeters[i]);//add the opt to array    \n}\n\nflow.set(\"allMeters\", msg.options);\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":190,"y":220,"wires":[["f47f2f97.64e75"]],"info":"Methode die uit de payload van de graphqldata een payload genereerd die een dropdown menu kan vullen met unieke meters.\n\nOok worden de variabelen aangemaakt die gebruikt worden in de gehele flow."},{"id":"1b382326.e765fd","type":"graphql","z":"dd36c88f.3e1418","name":"GetRecordsOfMeter","graphql":"60557c07.c3c7a4","format":"handlebars","syntax":"mustache","template":"{\n  recentRecords: getRecentRecordsBySignature(\n    signature: \"{{payload.meter}}\"\n    amount: {{payload.records}} \n  ) {\n    p1_decoded {\n      power {\n        delivered {\n          value\n        }\n        received {\n          value\n        }\n      }\n       energy {\n        delivered {\n          value\n        }\n        received {\n          value\n        }\n      }\n    }\n    createdAt\n  }\n}","x":640,"y":210,"wires":[["935f94d1.e6fb18","95a082c.5d1268"],[]],"info":"Request die een aantaal recente metingen opvraagt aan de hand van de signature van een meter"},{"id":"935f94d1.e6fb18","type":"debug","z":"dd36c88f.3e1418","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1060,"y":660,"wires":[],"info":"Blok wat de waardes van payloads kan tonen. Voornamelijk gebruikt tijdens ontwikkelen. Kan evt later verwijdert worden."},{"id":"6492bfd9.00358","type":"function","z":"dd36c88f.3e1418","name":"set records property","func":"flow.set(\"records\", msg.payload)\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":640,"y":90,"wires":[["2128def6.4d2922"]],"info":"functie die aantal gevraagd records in een variabel opslaat"},{"id":"466af875.c313c8","type":"function","z":"dd36c88f.3e1418","name":"Set meter property","func":"\n\nlet meter = msg.payload;\nresult = meter.replace(\" - LIVE⬤\",\"\");\n\nflow.set(\"meter\", result);\nvar msg1 = {};\nmsg1.payload = result\nflow.set(\"liveDeliveredInit\", null)\nflow.set(\"liveReceivedInit\", null)\n\nvar msg2 = {};\nmsg2.payload = [];\nvar msg3 = {};\nmsg3.payload = \"\";\n\n\nreturn [msg1,msg2,msg3];","outputs":3,"noerr":0,"initialize":"","finalize":"","libs":[],"x":120,"y":310,"wires":[["ebf33beb.7c0598","c2542e78.013a","df7eaf17.bf58c","94ae9d6d.8facd","4f07c072.48b1","715b288f.38d148","935f94d1.e6fb18"],["715b288f.38d148"],["b0b84c3b.11f"]],"info":"Functieblok die het variabel van de geselecteerde meter instelt."},{"id":"1812a732.156eb9","type":"ui_text_input","z":"dd36c88f.3e1418","name":"","label":"#recent records","tooltip":"Enter Amount of wanted records","group":"4dfd7862.056cd8","order":8,"width":4,"height":1,"passthru":false,"mode":"number","delay":"0","topic":"payload","topicType":"msg","x":620,"y":50,"wires":[["6492bfd9.00358"]],"info":"veld waar gebruiker een aantal gewenste recente records kan invullen\n"},{"id":"969eb073.11663","type":"ui_chart","z":"dd36c88f.3e1418","name":"Recent graph","group":"4dfd7862.056cd8","order":16,"width":19,"height":9,"label":"","chartType":"line","legend":"true","xformat":"dd HH:mm","interpolate":"linear","nodata":"waiting for data...","dot":false,"ymin":"0","ymax":"","removeOlder":1,"removeOlderPoints":"","removeOlderUnit":"3600","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"x":650,"y":330,"wires":[[]]},{"id":"58d1ab4f.0cb284","type":"function","z":"dd36c88f.3e1418","name":"Format data to graph","func":"var data;\nif(msg.payload.hasOwnProperty(\"recentRecords\"))\n    data = msg.payload.recentRecords;\nif(msg.payload.hasOwnProperty(\"getMeasurementFromDatesBySignature\"))\n    data = msg.payload.getMeasurementFromDatesBySignature;\nvar powerDelivered = [];\nvar energyDelivered = [];\nvar powerReceived = [];\nvar energyReceived = [];\n\nlet chartData = [];  \n\n//2. lets create a variable to hold the everything...\nlet element = {};  //create element1 as an empty object {}\n\n//3, now add the .property \"series\" to the element1 {object}\nelement.series = []; // add a .property called series of type [array]\nelement.series.push(\"Power delivered (kW)\");\nelement.series.push(\"Energy delivered (kWh)\");\nelement.series.push(\"Power received (kW)\");\nelement.series.push(\"Energy received (kWh)\");\n\nelement.data = []; // add a .property called data of type [array]\n\nvar time;\nvar currentDelivered; \nvar currentReceived;\nvar oldDelivered = data[0].p1_decoded.energy[0].delivered.value + data[0].p1_decoded.energy[1].delivered.value\nvar oldReceived = data[0].p1_decoded.energy[0].received.value + data[0].p1_decoded.energy[1].received.value\n\nfor(let i = 1; i < data.length; i++){\n    time = data[i].createdAt.substr(0, data[i].createdAt.length - 1)\n    powerDelivered.push( { \"x\": time,  \"y\": data[i].p1_decoded.power.delivered.value });\n    powerReceived.push( { \"x\": time,  \"y\": data[i].p1_decoded.power.received.value });\n    \n    currentDelivered = data[i].p1_decoded.energy[0].delivered.value + data[i].p1_decoded.energy[1].delivered.value \n    currentReceived = data[i].p1_decoded.energy[0].received.value + data[i].p1_decoded.energy[1].received.value\n    DeliveredDif = currentDelivered - oldDelivered;\n    ReceivedDif = currentReceived - oldReceived;\n    \n    energyDelivered.push( { \"x\": time,  \"y\": DeliveredDif.toFixed(3)});\n    energyReceived.push( { \"x\": time,  \"y\": ReceivedDif.toFixed(3)});\n}\n\n//5. now add a labels [array] to element1\nelement.data.push(powerDelivered);\nelement.data.push(energyReceived);\nelement.data.push(powerReceived);\nelement.data.push(energyDelivered);\n\nelement.labels = []; // add a .property called labels of type [array]\nelement.labels.push(\"power\"); //add an empty string to the \"labels\" [array]\nelement.labels.push(\"energy\"); //add an empty string to the \"labels\" [array]\n//Now add the element1 [array] into the chartData [array]\nchartData.push(element)\n\n//Lastly, return the chartData as the payload \nmsg.payload = chartData;\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":640,"y":290,"wires":[["969eb073.11663","43ec176a.b0cb48"]],"info":"Format de data uit het graphqlbericht naar data die een grafiek kan verwerken.\nWorden 4 lijsten gemaakt voor de 4 opgevraagde soorten waardes. X-as wordt opgebouwd uit de tijdslabels die worden meegegeven bij de records. Er kan op een naam boven de grafiek geklikt worden om de waardes te verbergen.\n"},{"id":"79a66821.a3b0c8","type":"ui_media","z":"dd36c88f.3e1418","group":"fa95aa9.b0ac158","name":"","width":4,"height":2,"order":5,"category":"Logo","file":"avanslogo.png","layout":"adjust","showcontrols":false,"loop":false,"onstart":false,"scope":"local","tooltip":"","x":2010,"y":140,"wires":[[]]},{"id":"2128def6.4d2922","type":"ui_button","z":"dd36c88f.3e1418","name":"","group":"4dfd7862.056cd8","order":10,"width":4,"height":1,"passthru":false,"label":"Get Amount","tooltip":"","color":"","bgcolor":"","icon":"","payload":"[]","payloadType":"json","topic":"payload","topicType":"msg","x":610,"y":130,"wires":[["bc0ff6e0.72db08","c2542e78.013a","fa4073b0.d9333"]],"info":"knop die de request uitvoert voor recente records"},{"id":"bc0ff6e0.72db08","type":"function","z":"dd36c88f.3e1418","name":"setup graphql request","func":"msg1 = {}\nmsg2 = {}\n\nvar myMeter = flow.get(\"meter\");\nvar myRecords = flow.get(\"records\");\n\nif(myRecords === null || myRecords <= 0){myRecords = 0;}\n\nmsg1.payload = {\n    meter :myMeter,\n    records :myRecords \n}\n\nmsg2.payload = \"\";\n\nreturn [msg1, msg2];","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":640,"y":170,"wires":[["1b382326.e765fd"],["1812a732.156eb9"]]},{"id":"43ec176a.b0cb48","type":"ui_toast","z":"dd36c88f.3e1418","position":"top right","displayTime":"5","highlight":"Green","sendall":true,"outputs":0,"ok":"OK","cancel":"","raw":false,"topic":"Data fetched, creating graph...","name":"graph confirmation","x":1950,"y":100,"wires":[]},{"id":"54dc7b1d.1734a4","type":"ui_date_picker","z":"dd36c88f.3e1418","name":"","label":"startDate","group":"5184e762.96d8f8","order":8,"width":4,"height":1,"passthru":true,"topic":"payload","topicType":"msg","x":1200,"y":30,"wires":[["1bc4d759.175c69","ebb00961.02ee18"]],"inputLabels":["msg.payload.start"]},{"id":"ebb00961.02ee18","type":"ui_date_picker","z":"dd36c88f.3e1418","name":"","label":"untilDate","group":"5184e762.96d8f8","order":10,"width":4,"height":1,"passthru":true,"topic":"topic","topicType":"msg","x":1360,"y":30,"wires":[["ff91a2db.55059"]]},{"id":"1bc4d759.175c69","type":"function","z":"dd36c88f.3e1418","name":"","func":"flow.set(\"startDate\", msg.payload);\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1200,"y":70,"wires":[[]]},{"id":"ff91a2db.55059","type":"function","z":"dd36c88f.3e1418","name":"","func":"flow.set(\"untilDate\", msg.payload);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1360,"y":70,"wires":[[]]},{"id":"488d76d5.302ff8","type":"ui_text_input","z":"dd36c88f.3e1418","name":"","label":"startTime","tooltip":"","group":"5184e762.96d8f8","order":14,"width":4,"height":1,"passthru":true,"mode":"time","delay":"1000","topic":"time","topicType":"str","x":1190,"y":100,"wires":[["e0a1bc07.f005f"]]},{"id":"aa6ca61e.22a5b8","type":"ui_text_input","z":"dd36c88f.3e1418","name":"","label":"untilTime","tooltip":"","group":"5184e762.96d8f8","order":16,"width":4,"height":1,"passthru":true,"mode":"time","delay":"1000","topic":"time","topicType":"str","x":1360,"y":110,"wires":[["2d1a8f2c.cc4df"]]},{"id":"2d1a8f2c.cc4df","type":"function","z":"dd36c88f.3e1418","name":"","func":"flow.set(\"untilTime\", msg.payload);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1360,"y":150,"wires":[[]]},{"id":"e0a1bc07.f005f","type":"function","z":"dd36c88f.3e1418","name":"","func":"flow.set(\"startTime\", msg.payload);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1200,"y":150,"wires":[[]]},{"id":"159112c7.8eae9d","type":"graphql","z":"dd36c88f.3e1418","name":"GetRecordsOfMeter","graphql":"60557c07.c3c7a4","format":"handlebars","syntax":"mustache","template":"{\n  getMeasurementFromDatesBySignature(\n    from: \"{{payload.start}}\"\n    till: \"{{payload.until}}\"\n    id: \"{{payload.meter}}\"\n  ) {\n    p1_decoded {\n      power {\n        delivered {\n          value\n        }\n        received {\n          value\n        }\n      }\n       energy {\n        delivered {\n          value\n        }\n        received {\n          value\n        }\n      }\n    }\n    createdAt\n  }\n}","x":1230,"y":310,"wires":[["79600ed9.02f5b","935f94d1.e6fb18"],[]],"info":"Request om alle records op te halen van een meter tussen twee bepaalde tijdstippen."},{"id":"85ee18cc.6489b8","type":"ui_button","z":"dd36c88f.3e1418","name":"fetchCalanderData","group":"5184e762.96d8f8","order":18,"width":2,"height":1,"passthru":false,"label":"Graph","tooltip":"","color":"","bgcolor":"","icon":"","payload":"[]","payloadType":"json","topic":"payload","topicType":"msg","x":1190,"y":190,"wires":[["5df2e99e.344808","fa4073b0.d9333","c2542e78.013a"]]},{"id":"5df2e99e.344808","type":"function","z":"dd36c88f.3e1418","name":"Setup graphql request","func":"var startDate = new Date(flow.get(\"startDate\") + 12*60*60*1000); // adding 12 hours to both dates to \nlet startTime = new Date(flow.get(\"startTime\"));\nvar untilDate = new Date(flow.get(\"untilDate\") + 12*60*60*1000); // avoid SummerTime taking 1 day off the date\nlet untilTime = new Date(flow.get(\"untilTime\"));\n\nif((flow.get(\"startDate\") + flow.get(\"startTime\")) >= (flow.get(\"untilDate\") + flow.get(\"untilTime\")))\n{\n    msg.payload = \"False\";\n    return msg;\n}\n\nvar date = \"0\" + startDate.getDate();\nvar month = \"0\" + (startDate.getMonth() + 1);\nvar year = startDate.getFullYear();\nvar formattedStartDate = year + '-' + month.substr(-2) + '-' + date.substr(-2); \n\ndate = \"0\" + untilDate.getDate();\nmonth = \"0\" + (untilDate.getMonth() + 1);\nyear = untilDate.getFullYear();\nvar formattedUntilDate = year + '-' + month.substr(-2) + '-' + date.substr(-2); \n\nvar hours = \"0\" + startTime.getHours();\nvar minutes = \"0\" + startTime.getMinutes();\nvar seconds = \"0\" + startTime.getSeconds();\nvar formattedStartTime = 'T' + hours.substr(-2) + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n\nhours = \"0\" + untilTime.getHours();\nminutes = \"0\" + untilTime.getMinutes();\nseconds = \"0\" + untilTime.getSeconds();\nvar formattedUntilTime = 'T' + hours.substr(-2) + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n\nvar myMeter = flow.get(\"meter\");\n\nmsg.payload = {\n    start : formattedStartDate + formattedStartTime,\n    until : formattedUntilDate + formattedUntilTime,\n    meter: myMeter\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1180,"y":230,"wires":[["2b9965f4.7b7a1a"]],"info":"Methode die checkt of de ingevoerde data correct zijn en de eindtijd niet voor de begintijd ligt. Wanneer dit correct is worden de data omgevormd naar een format die de grapqhlrequest kan gebruiken. Er wordt bij beide dagen een paar uur opgeteld zodat de datum correct blijft in zowel zomer en wintertijd. "},{"id":"d3ca35e1.ffb6c8","type":"function","z":"dd36c88f.3e1418","name":"Format data to graph","func":"var data = msg.payload.getMeasurementFromDatesBySignature;\n\nvar powerDelivered = [];\nvar energyDelivered = [];\nvar powerReceived = [];\nvar energyReceived = [];\n\nlet chartData = [];  \n\n//2. lets create a variable to hold the everything...\nlet element = {};  //create element1 as an empty object {}\n\n//3, now add the .property \"series\" to the element1 {object}\nelement.series = []; // add a .property called series of type [array]\nelement.series.push(\"Power delivered (kW)\");\nelement.series.push(\"Energy delivered (kWh)\");\nelement.series.push(\"Power received (kW)\");\nelement.series.push(\"Energy received (kWh)\");\n\nelement.data = []; // add a .property called data of type [array]\n\nvar time;\nvar currentDelivered; \nvar currentReceived;\nvar oldDelivered = data[0].p1_decoded.energy[0].delivered.value + data[0].p1_decoded.energy[1].delivered.value;\nvar oldReceived = data[0].p1_decoded.energy[0].received.value + data[0].p1_decoded.energy[1].received.value;\n\nfor(let i = 1; i < data.length; i++){\n    time = data[i].createdAt.substr(0, data[i].createdAt.length - 1)\n    powerDelivered.push( { \"x\": time,  \"y\": data[i].p1_decoded.power.delivered.value });\n    powerReceived.push( { \"x\": time,  \"y\": data[i].p1_decoded.power.received.value });\n    currentDelivered = data[i].p1_decoded.energy[0].delivered.value + data[i].p1_decoded.energy[1].delivered.value \n    currentReceived = data[i].p1_decoded.energy[0].received.value + data[i].p1_decoded.energy[1].received.value\n    DeliveredDif = currentDelivered - oldDelivered;\n    ReceivedDif = currentReceived - oldReceived;\n    energyDelivered.push( { \"x\": time,  \"y\": DeliveredDif.toFixed(3)});\n    energyReceived.push( { \"x\": time,  \"y\": ReceivedDif.toFixed(3)});\n}\n\nelement.data.push(powerDelivered);\nelement.data.push(energyReceived);\nelement.data.push(powerReceived);\nelement.data.push(energyDelivered);\n\nelement.labels = []; // add a .property called labels of type [array]\nelement.labels.push(\"power\"); //add an empty string to the \"labels\" [array]\nelement.labels.push(\"energy\"); //add an empty string to the \"labels\" [array]\n//Now add the element1 [array] into the chartData [array]\nchartData.push(element)\n\n//Lastly, return the chartData as the payload \nmsg.payload = chartData;\nreturn msg;\n\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1240,"y":390,"wires":[["43ec176a.b0cb48","eba468ca.3928a8","935f94d1.e6fb18"]],"info":"Format de data uit het graphqlbericht naar data die een grafiek kan verwerken.\nWorden 4 lijsten gemaakt voor de 4 opgevraagde soorten waardes. X-as wordt opgebouwd uit de tijdslabels die worden meegegeven bij de records. Er kan op een naam boven de grafiek geklikt worden om de waardes te verbergen.\n"},{"id":"ee757451.596668","type":"ui_text","z":"dd36c88f.3e1418","group":"fa95aa9.b0ac158","order":2,"width":11,"height":2,"name":"Welcome text","label":"","format":"<font color= #FFFFFF, font size= 4> Welcome to the Smart Meter Interface. Please start by selecting a Smart Meter by clicking the button ↓ below ↓</font>","layout":"col-center","x":2170,"y":40,"wires":[]},{"id":"a5cd6f05.0307","type":"ui_media","z":"dd36c88f.3e1418","group":"4dfd7862.056cd8","name":"","width":4,"height":2,"order":6,"category":"Logo","file":"avanslogo.png","layout":"adjust","showcontrols":false,"loop":false,"onstart":false,"scope":"local","tooltip":"","x":2010,"y":180,"wires":[[]]},{"id":"eba468ca.3928a8","type":"ui_chart","z":"dd36c88f.3e1418","name":"Calender chart","group":"5184e762.96d8f8","order":20,"width":19,"height":9,"label":"","chartType":"line","legend":"true","xformat":"dd HH:mm","interpolate":"linear","nodata":"Waiting for data...","dot":false,"ymin":"","ymax":"","removeOlder":1,"removeOlderPoints":"","removeOlderUnit":"3600","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"x":1240,"y":430,"wires":[[]]},{"id":"fc300235.bdde7","type":"ui_media","z":"dd36c88f.3e1418","group":"5184e762.96d8f8","name":"","width":4,"height":2,"order":6,"category":"Logo","file":"avanslogo.png","layout":"adjust","showcontrols":false,"loop":false,"onstart":false,"scope":"local","tooltip":"","x":1930,"y":140,"wires":[[]]},{"id":"ea3a704d.c20d","type":"ui_gauge","z":"dd36c88f.3e1418","name":"Power Delivered","group":"fa95aa9.b0ac158","order":12,"width":8,"height":5,"gtype":"gage","title":"Power delivered","label":"kW","format":"{{value}}","min":0,"max":"5","colors":["#00b500","#e6e600","#ca3838"],"seg1":"1.67","seg2":"3.33","x":300,"y":600,"wires":[]},{"id":"e4dc8642.029578","type":"ui_ui_control","z":"dd36c88f.3e1418","name":"Tab switching","events":"change","x":1070,"y":630,"wires":[["c2542e78.013a"]],"info":"Eventlisterener die checkt of er van tabblad gewisseld wordt in de UI. Deze zal de clear graph aanroepen zodat de ui geen performance issues zal ondervindne."},{"id":"c2542e78.013a","type":"function","z":"dd36c88f.3e1418","name":"Call to clear graph","func":"msg.payload = [];\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1080,"y":600,"wires":[["969eb073.11663","eba468ca.3928a8"]],"info":"Methode die door meerdere nodes aangeroepen kan worden om de grafiek leeg te maken. Voorkomt het probleem dat de UI kan vastlopen"},{"id":"ae8cde8.3d5a72","type":"ui_button","z":"dd36c88f.3e1418","name":"Energy fetch","group":"5184e762.96d8f8","order":12,"width":2,"height":1,"passthru":false,"label":"Energy","tooltip":"Get energy between two dates","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"topic","topicType":"msg","x":1370,"y":190,"wires":[["e52474f8.0ced18","fa4073b0.d9333"]]},{"id":"e52474f8.0ced18","type":"function","z":"dd36c88f.3e1418","name":"Energy format to graphql","func":"var startDate = new Date(flow.get(\"startDate\") + 2*60*60*1000); // adding 2 hours to both dates to \nlet startTime = new Date(flow.get(\"startTime\"));\nvar untilDate = new Date(flow.get(\"untilDate\") + 2*60*60*1000); // avoid SummerTime taking 1 day off the date\nlet untilTime = new Date(flow.get(\"untilTime\"));\n\nif((flow.get(\"startDate\") + flow.get(\"startTime\")) >= (flow.get(\"untilDate\") + flow.get(\"untilTime\")))\n{\n    msg.payload = \"False\";\n    return msg;\n}\n\nvar date = \"0\" + startDate.getDate();\nvar month = \"0\" + (startDate.getMonth() + 1);\nvar year = startDate.getFullYear();\nvar formattedStartDate = year + '-' + month.substr(-2) + '-' + date.substr(-2); \n\ndate = \"0\" + untilDate.getDate();\nmonth = \"0\" + (untilDate.getMonth() + 1);\nyear = untilDate.getFullYear();\nvar formattedUntilDate = year + '-' + month.substr(-2) + '-' + date.substr(-2); \n\nvar hours = \"0\" + startTime.getHours();\nvar minutes = \"0\" + startTime.getMinutes();\nvar seconds = \"0\" + startTime.getSeconds();\nvar formattedStartTime = 'T' + hours.substr(-2) + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n\nhours = \"0\" + untilTime.getHours();\nminutes = \"0\" + untilTime.getMinutes();\nseconds = \"0\" + untilTime.getSeconds();\nvar formattedUntilTime = 'T' + hours.substr(-2) + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n\nvar myMeter = flow.get(\"meter\");\n\nmsg.payload = {\n    start : formattedStartDate + formattedStartTime,\n    until : formattedUntilDate + formattedUntilTime,\n    meter: myMeter\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1420,"y":250,"wires":[["265d0e9e.7adc92"]],"info":"Methode om een voorbeeld query uit te voeren, gemakkelijk om te testen."},{"id":"fa4073b0.d9333","type":"ui_toast","z":"dd36c88f.3e1418","position":"top right","displayTime":"5","highlight":"blue","sendall":false,"outputs":0,"ok":"OK","cancel":"","raw":false,"topic":"Data request send","name":"Data request","x":1750,"y":100,"wires":[]},{"id":"5c63ad46.a6f314","type":"comment","z":"dd36c88f.3e1418","name":"All used media and popup messages","info":"","x":1820,"y":220,"wires":[]},{"id":"8665bf27.9ec6a","type":"comment","z":"dd36c88f.3e1418","name":"Main screen","info":"","x":310,"y":260,"wires":[]},{"id":"fcc3635a.83305","type":"comment","z":"dd36c88f.3e1418","name":"Recent records tab","info":"","x":750,"y":130,"wires":[]},{"id":"38c3d744.a013e8","type":"comment","z":"dd36c88f.3e1418","name":"Calander tab","info":"","x":1390,"y":210,"wires":[]},{"id":"f10367db.5a65b8","type":"ui_toast","z":"dd36c88f.3e1418","position":"top right","displayTime":"3","highlight":"blue","sendall":true,"outputs":0,"ok":"OK","cancel":"","raw":false,"topic":"Fetching meters","name":"Fetching meters","x":1760,"y":60,"wires":[]},{"id":"95a082c.5d1268","type":"switch","z":"dd36c88f.3e1418","name":"empty recentRecords check","property":"payload.recentRecords","propertyType":"msg","rules":[{"t":"nempty"},{"t":"empty"}],"checkall":"true","repair":false,"outputs":2,"x":660,"y":240,"wires":[["58d1ab4f.0cb284"],["a37b9ace.f134f8"]],"info":"Switch die checkt of er data in de payload zit, zal een popup in de ui geven mocht deze leeg zijn\n"},{"id":"a37b9ace.f134f8","type":"ui_toast","z":"dd36c88f.3e1418","position":"top right","displayTime":"3","highlight":"red","sendall":true,"outputs":0,"ok":"OK","cancel":"","raw":false,"topic":"No data found","name":"No data found","x":1760,"y":140,"wires":[]},{"id":"79600ed9.02f5b","type":"switch","z":"dd36c88f.3e1418","name":"Check if list has content","property":"payload.getMeasurementFromDatesBySignature","propertyType":"msg","rules":[{"t":"nempty"},{"t":"empty"}],"checkall":"true","repair":false,"outputs":2,"x":1240,"y":340,"wires":[["d3ca35e1.ffb6c8"],["a37b9ace.f134f8"]]},{"id":"2b9965f4.7b7a1a","type":"switch","z":"dd36c88f.3e1418","name":"dateCheck","property":"payload","propertyType":"msg","rules":[{"t":"neq","v":"False","vt":"str"},{"t":"eq","v":"False","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":1170,"y":280,"wires":[["159112c7.8eae9d"],["87b2efa9.8315b"]],"info":"Methode die checkt of de payload van de vorige functie false is, hieruit blijkt of de invoer data correct zijn of niet. Zal een popup naar de ui sturen mocht dit niet correct zijn."},{"id":"87b2efa9.8315b","type":"ui_toast","z":"dd36c88f.3e1418","position":"top right","displayTime":"3","highlight":"Red","sendall":true,"outputs":0,"ok":"OK","cancel":"","raw":false,"topic":"Dates are incorrect","name":"Dates are incorrect","x":1770,"y":180,"wires":[]},{"id":"8911655e.5addd8","type":"function","z":"dd36c88f.3e1418","name":"Reset values on start UI","func":"flow.set(\"records\", 0);\nflow.set(\"meter\", null);\nflow.set(\"startTime\", 0);\nflow.set(\"untilTime\", 0);\nflow.set(\"liveDeliveredInit\", null);\nflow.set(\"liveReceivedInit\", null);\nflow.set(\"allMeters\", []);\nflow.set(\"onlineMeters\", []);\n\nmsg1 = {};\nmsg2 = {};\nmsg3 = {};\nmsg4 = {};\nmsg5 = {};\nmsg1.payload = new Date();\nmsg3.payload = \"Waiting for selection\";\nmsg4.payload = 0;\nmsg2.options = [];\nmsg2.payload = [];\nmsg5.payload = \"\";\n\nreturn [msg1,msg2,msg3,msg4,msg5];","outputs":5,"noerr":0,"initialize":"flow.set(\"records\", 0);\nflow.set(\"meter\", null)\nflow.set(\"startDate\", null)\nflow.set(\"untilDate\", null)\nflow.set(\"startTime\", null)\nflow.set(\"untilTime\", null)\nflow.set(\"liveDeliveredInit\", null)\nflow.set(\"liveReceivedInit\", null)\n\nmsg1 = {};\nmsg2 = {};\nmsg3 = {};\nmsg4 = {};\nmsg5 = {};\nmsg1.payload = new Date();\nmsg3.payload = \"Waiting for selection\";\nmsg4.payload = 0;\nmsg2.options = [];\nmsg2.payload = [];\nmsg5.payload = \"\";\nreturn [msg1,msg2,msg3,msg4,msg5];","finalize":"","libs":[],"x":260,"y":60,"wires":[["54dc7b1d.1734a4","c2542e78.013a"],["f47f2f97.64e75","715b288f.38d148"],["4f07c072.48b1","94ae9d6d.8facd","df7eaf17.bf58c"],["ea3a704d.c20d","756f5aec.4fa914","73a158ac.5fa538","61392b17.382fb4","488d76d5.302ff8","aa6ca61e.22a5b8"],["b0b84c3b.11f"]]},{"id":"c0f67677.d41a38","type":"function","z":"dd36c88f.3e1418","name":"Get Gauche value from message","func":"var powerDelivered;\nvar powerReceived\nvar energyReceived;\nvar energyDelivered;\nvar msg1 = {};\nvar msg2 = {};\nvar msg3 = {};\nvar msg4 = {};\nvar data = [];\n\nif(msg.payload.hasOwnProperty(\"recentRecords\")){\n    signature = msg.payload.recentRecords[0].signature;\n    data = msg.payload.recentRecords[0].p1_decoded;\n}else{\n    signature = msg.payload.signature;\n    data = msg.payload.p1_decoded; \n}\n\n\nif(signature === flow.get(\"meter\")){\n    if(Array.isArray(data.power)){\n        powerDelivered = data.power[0].delivered.value;\n        powerReceived = data.power[1].received.value;\n    }else{\n        powerDelivered = data.power.delivered.value;\n        powerReceived = data.power.received.value;\n    }\n    energyDelivered = data.energy[0].delivered.value + data.energy[1].delivered.value\n    energyReceived = data.energy[0].received.value + data.energy[1].received.value\n    msg1.payload = powerDelivered;\n    msg2.payload = powerReceived;\n    msg3.payload = energyDelivered.toFixed(3);\n    msg4.payload = energyReceived.toFixed(3);\n}else{msg1.payload = null; msg2.payload = null; msg3.payload = null; msg4.payload = null;}\n\n\nreturn [msg1,msg2,msg3,msg4];","outputs":4,"noerr":0,"initialize":"","finalize":"","libs":[],"x":180,"y":540,"wires":[["69d1570f.a1a7c8"],["15166f5f.95ab21"],["e727ba1b.097878"],["a1e051ca.bb7bc"]],"info":"Methode die die waardes naar de verschillende gauches stuurt. Eerst wordt gekeken of het de payload is van de een MQTT bericht of een graphql request. Dan wordt gekeken of de signature van het bericht overeenkomt met de signature van de huidig geselecteerde meter. vervolgens wordt de data eruit gehaald en verstuurd naar de bijbehorden gauche."},{"id":"ebf33beb.7c0598","type":"graphql","z":"dd36c88f.3e1418","name":"Get recent gauch values ","graphql":"60557c07.c3c7a4","format":"handlebars","syntax":"mustache","template":"{\n  recentRecords: getRecentRecordsBySignature(\n    signature: \"{{payload}}\"\n    amount: 1\n  ) {\n    p1_decoded {\n      power {\n        delivered {\n          value\n        }\n        received {\n          value\n        }\n      }\n       energy {\n        delivered {\n          value\n        }\n        received {\n          value\n        }\n      }\n    }\n    signature\n  }\n}","x":150,"y":480,"wires":[["935f94d1.e6fb18","c0f67677.d41a38"],[]],"info":"Deze graphql request wordt gemaakt wanneer er een meter uit de lijst gekozen wordt. Deze zal de meeste recente record van de meter bevatten en de gauches updaten naar die waardes."},{"id":"69d1570f.a1a7c8","type":"switch","z":"dd36c88f.3e1418","name":"","property":"payload","propertyType":"msg","rules":[{"t":"nnull"}],"checkall":"true","repair":false,"outputs":1,"x":90,"y":600,"wires":[["ea3a704d.c20d"]]},{"id":"73a158ac.5fa538","type":"ui_gauge","z":"dd36c88f.3e1418","name":"Energy recieved","group":"fa95aa9.b0ac158","order":31,"width":8,"height":5,"gtype":"gage","title":"Energy recieved","label":"kWh","format":"{{value}}","min":0,"max":"50000","colors":["#00b500","#e6e600","#ca3838"],"seg1":"50000/3","seg2":"50000/3*2","x":300,"y":720,"wires":[]},{"id":"a1e051ca.bb7bc","type":"switch","z":"dd36c88f.3e1418","name":"","property":"payload","propertyType":"msg","rules":[{"t":"nnull"}],"checkall":"true","repair":false,"outputs":1,"x":90,"y":720,"wires":[["73a158ac.5fa538"]]},{"id":"756f5aec.4fa914","type":"ui_gauge","z":"dd36c88f.3e1418","name":"Power Received","group":"fa95aa9.b0ac158","order":14,"width":8,"height":5,"gtype":"gage","title":"Power received","label":"kW","format":"{{value}}","min":0,"max":10,"colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":300,"y":640,"wires":[]},{"id":"61392b17.382fb4","type":"ui_gauge","z":"dd36c88f.3e1418","name":"Energy Delivered","group":"fa95aa9.b0ac158","order":29,"width":8,"height":5,"gtype":"gage","title":"Energy delivered","label":"kWh","format":"{{value}}","min":0,"max":"10000","colors":["#ca3838","#e6e600","#00b500"],"seg1":"","seg2":"","x":310,"y":680,"wires":[]},{"id":"e727ba1b.097878","type":"switch","z":"dd36c88f.3e1418","name":"","property":"payload","propertyType":"msg","rules":[{"t":"nnull"}],"checkall":"true","repair":false,"outputs":1,"x":90,"y":680,"wires":[["61392b17.382fb4"]]},{"id":"15166f5f.95ab21","type":"switch","z":"dd36c88f.3e1418","name":"","property":"payload","propertyType":"msg","rules":[{"t":"nnull"}],"checkall":"true","repair":false,"outputs":1,"x":90,"y":640,"wires":[["756f5aec.4fa914"]]},{"id":"4f07c072.48b1","type":"ui_text","z":"dd36c88f.3e1418","group":"4dfd7862.056cd8","order":2,"width":9,"height":2,"name":"Recent tab info","label":"","format":"<font color= #FFFFFF, font size= 4> Enter amount of wanted recent records.<br>Meter: [{{msg.payload}}]</font>","layout":"row-center","x":2170,"y":70,"wires":[]},{"id":"df7eaf17.bf58c","type":"ui_text","z":"dd36c88f.3e1418","group":"5184e762.96d8f8","order":2,"width":9,"height":2,"name":"calander tab info","label":"","format":"<font color= #FFFFFF, font size= 4> Get records from start until end.<br>Meter: [{{msg.payload}}]</font>","layout":"row-center","x":2180,"y":130,"wires":[]},{"id":"715b288f.38d148","type":"ui_chart","z":"dd36c88f.3e1418","name":"Live graph","group":"1051950f.02d58b","order":7,"width":19,"height":8,"label":"","chartType":"line","legend":"true","xformat":"dd HH:mm","interpolate":"linear","nodata":"waiting for data...","dot":false,"ymin":"0","ymax":"","removeOlder":"1","removeOlderPoints":"5000","removeOlderUnit":"86400","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"x":820,"y":660,"wires":[[]]},{"id":"15bf47aa.806ac8","type":"switch","z":"dd36c88f.3e1418","name":"","property":"payload","propertyType":"msg","rules":[{"t":"nnull"}],"checkall":"true","repair":false,"outputs":1,"x":620,"y":600,"wires":[["715b288f.38d148"]]},{"id":"7e1356e1.e87d48","type":"switch","z":"dd36c88f.3e1418","name":"","property":"payload","propertyType":"msg","rules":[{"t":"nnull"}],"checkall":"true","repair":false,"outputs":1,"x":620,"y":640,"wires":[["715b288f.38d148"]]},{"id":"abd530ab.94474","type":"switch","z":"dd36c88f.3e1418","name":"","property":"payload","propertyType":"msg","rules":[{"t":"nnull"}],"checkall":"true","repair":false,"outputs":1,"x":620,"y":680,"wires":[["715b288f.38d148"]]},{"id":"d3ef0c0c.7e12","type":"switch","z":"dd36c88f.3e1418","name":"","property":"payload","propertyType":"msg","rules":[{"t":"nnull"}],"checkall":"true","repair":false,"outputs":1,"x":620,"y":720,"wires":[["715b288f.38d148"]]},{"id":"2bf5bae.0c14946","type":"ui_media","z":"dd36c88f.3e1418","group":"1051950f.02d58b","name":"","width":4,"height":2,"order":5,"category":"Logo","file":"avanslogo.png","layout":"adjust","showcontrols":false,"loop":false,"onstart":false,"scope":"local","tooltip":"","x":1930,"y":180,"wires":[[]]},{"id":"94ae9d6d.8facd","type":"ui_text","z":"dd36c88f.3e1418","group":"1051950f.02d58b","order":2,"width":11,"height":2,"name":"live tab info","label":"","format":"<font color= #FFFFFF, font size= 4>See if live data is being received.<br>Meter: [{{msg.payload}}]</font>","layout":"row-center","x":2160,"y":220,"wires":[]},{"id":"cbd8fb4d.91de58","type":"ui_ui_control","z":"dd36c88f.3e1418","name":"refresh tab","events":"connect","x":70,"y":30,"wires":[["8911655e.5addd8"]]},{"id":"9593926.d7a7c7","type":"function","z":"dd36c88f.3e1418","name":"Live graph setup","func":"var msg1 = {};\nvar msg2 = {};\nvar msg3 = {};\nvar msg4 = {};\nvar msg5 = {};\n\nvar signature = msg.payload.signature;\nvar online = flow.get(\"onlineMeters\");\nmsg5.options = [];\nif(!online.includes(signature)){\n    online.push(signature);\n    flow.set(\"onlineMeters\", online)\n    var meters = flow.get(\"allMeters\");\n    for (var i in meters) {\n     if (meters[i] == signature) {\n        meters[i] = signature + \" - LIVE⬤\";\n        msg5.options = meters;\n        flow.set(\"allMeters\",meters);\n        break;\n     }\n   }\n}\n\nif (signature === flow.get(\"meter\")) {\n  var powerDelivered;\n  var powerReceived;\n  var energyReceived;\n  var energyDelivered;\n  var data = [];\n  var liveDeliveredInit = flow.get(\"liveDeliveredInit\");\n  var liveReceivedInit = flow.get(\"liveReceivedInit\");\n\n  data = msg.payload.p1_decoded;\n  data.createdAt = new Date();\n\n  if (Array.isArray(data.power)) {\n    powerDelivered = data.power[0].delivered.value;\n    powerReceived = data.power[1].received.value;\n  } else {\n    powerDelivered = data.power.delivered.value;\n    powerReceived = data.power.received.value;\n  }\n  energyDelivered = data.energy[0].delivered.value + data.energy[1].delivered.value;\n  energyReceived = data.energy[0].received.value + data.energy[1].received.value;\n  if (liveDeliveredInit == null) {\n    liveDeliveredInit = energyDelivered;\n    flow.set(\"liveDeliveredInit\",liveDeliveredInit);\n  }\n  if (liveReceivedInit == null) {\n    liveReceivedInit = energyReceived;\n    flow.set(\"liveReceivedInit\",liveReceivedInit);\n  }\n \n var energyDeliveredDif = energyDelivered - liveDeliveredInit;\n var energyReceivedDif = energyReceived - liveReceivedInit;\n\n  msg1 = {\n    payload: powerDelivered,\n    topic: \"Power Delivered (kW)\",\n  };\n\n msg2 = {\n    payload: energyDeliveredDif.toFixed(3),\n    topic: \"Energy Delivered (kWh)\"\n  };\n\n  msg3 = {\n    payload: powerReceived,\n    topic: \"Power Received (kW)\"\n  };\n\n  msg4 = {\n    payload: energyReceivedDif.toFixed(3),\n    topic: \"Energy Received (kWh)\"\n  };\n\n}else {\n    msg1.payload = null; msg2.payload = null; msg3.payload = null; msg4.payload = null;\n}\n\nreturn [msg1, msg2, msg3, msg4, msg5];\n","outputs":5,"noerr":0,"initialize":"","finalize":"","libs":[],"x":620,"y":540,"wires":[["15bf47aa.806ac8"],["7e1356e1.e87d48"],["abd530ab.94474"],["d3ef0c0c.7e12"],["1923b33f.aa6efd"]]},{"id":"265d0e9e.7adc92","type":"switch","z":"dd36c88f.3e1418","name":"dateCheck","property":"payload","propertyType":"msg","rules":[{"t":"neq","v":"False","vt":"str"},{"t":"eq","v":"False","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":1410,"y":280,"wires":[["8fb307ce.bac5b8"],["87b2efa9.8315b"]],"info":"Methode die checkt of de payload van de vorige functie false is, hieruit blijkt of de invoer data correct zijn of niet. Zal een popup naar de ui sturen mocht dit niet correct zijn."},{"id":"8fb307ce.bac5b8","type":"graphql","z":"dd36c88f.3e1418","name":"Get Energy between dates","graphql":"60557c07.c3c7a4","format":"handlebars","syntax":"mustache","template":"{\n  getEnergyFromDatesBySignature(\n    from: \"{{payload.start}}\"\n    till: \"{{payload.until}}\"\n    id: \"{{payload.meter}}\"\n  ) {\n    p1_decoded {\n       energy {\n        delivered {\n          value\n        }\n        received {\n          value\n        }\n      }\n    }\n    createdAt\n  }\n}","x":1490,"y":310,"wires":[["9e37664f.a06ae8","935f94d1.e6fb18"],[]]},{"id":"b0b84c3b.11f","type":"ui_text","z":"dd36c88f.3e1418","group":"5184e762.96d8f8","order":21,"width":0,"height":0,"name":"Energy Text","label":"","format":"<font color= #FFFFFF, font size= 4>{{msg.payload}}</font>","layout":"row-center","x":2160,"y":160,"wires":[]},{"id":"10cd9b0.9a22f65","type":"function","z":"dd36c88f.3e1418","name":"format energy to label","func":"var data = msg.payload.getEnergyFromDatesBySignature;\nvar oldDelivered = data[0].p1_decoded.energy[0].delivered.value + data[0].p1_decoded.energy[1].delivered.value;\nvar oldReceived = data[0].p1_decoded.energy[0].received.value + data[0].p1_decoded.energy[1].received.value;\nvar newDelivered = data[1].p1_decoded.energy[0].delivered.value + data[1].p1_decoded.energy[1].delivered.value;\nvar newReceived = data[1].p1_decoded.energy[0].received.value + data[1].p1_decoded.energy[1].received.value;\nvar delivDif = (newDelivered - oldDelivered).toFixed(3);\nvar receivDif = (newReceived - oldReceived).toFixed(3);\n\nmsg.payload = \"Total Energy Delivered: \" + receivDif + \"kWh - Total Energy Received: \" + delivDif + \" kWh.\";\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1510,"y":420,"wires":[["b0b84c3b.11f","935f94d1.e6fb18"]]},{"id":"9e37664f.a06ae8","type":"switch","z":"dd36c88f.3e1418","name":"Check if list has content","property":"payload.getEnergyFromDatesBySignature","propertyType":"msg","rules":[{"t":"nempty"},{"t":"empty"}],"checkall":"true","repair":false,"outputs":2,"x":1510,"y":370,"wires":[["10cd9b0.9a22f65"],["a37b9ace.f134f8"]]},{"id":"2d004065.7d5fd","type":"comment","z":"dd36c88f.3e1418","name":"Live gauche updating from mqtt","info":"","x":160,"y":450,"wires":[]},{"id":"75cfaf3b.0e433","type":"comment","z":"dd36c88f.3e1418","name":"Live graph from mqtt records","info":"","x":660,"y":750,"wires":[]},{"id":"54deb244.12ee4c","type":"ui_button","z":"dd36c88f.3e1418","name":"","group":"4dfd7862.056cd8","order":13,"width":4,"height":1,"passthru":false,"label":"Last 24H","tooltip":"","color":"","bgcolor":"","icon":"","payload":"[]","payloadType":"json","topic":"payload","topicType":"msg","x":930,"y":120,"wires":[["c90a01ec.89a1a"]],"info":"knop die de request uitvoert voor recente records"},{"id":"c90a01ec.89a1a","type":"function","z":"dd36c88f.3e1418","name":"Setup graphql request","func":"var untilDate = new Date();\nvar startDate = new Date(untilDate - 24*60*60*1000);\n//startDate -= (24*60*60*1000);\n\nvar date = \"0\" + startDate.getDate();\nvar month = \"0\" + (startDate.getMonth() + 1);\nvar year = startDate.getFullYear();\nvar formattedStartDate = year + '-' + month.substr(-2) + '-' + date.substr(-2); \n\ndate = \"0\" + untilDate.getDate();\nmonth = \"0\" + (untilDate.getMonth() + 1);\nyear = untilDate.getFullYear();\nvar formattedUntilDate = year + '-' + month.substr(-2) + '-' + date.substr(-2); \n\nvar hours = \"0\" + startDate.getHours();\nvar minutes = \"0\" + startDate.getMinutes();\nvar seconds = \"0\" + startDate.getSeconds();\nvar formattedStartTime = 'T' + hours.substr(-2) + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n\nhours = \"0\" + untilDate.getHours();\nminutes = \"0\" + untilDate.getMinutes();\nseconds = \"0\" + untilDate.getSeconds();\nvar formattedUntilTime = 'T' + hours.substr(-2) + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n\nvar myMeter = flow.get(\"meter\");\n\nmsg.payload = {\n    start : formattedStartDate + formattedStartTime,\n    until : formattedUntilDate + formattedUntilTime,\n    meter: myMeter\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":940,"y":150,"wires":[["904ce09d.baf5b","fa4073b0.d9333","935f94d1.e6fb18"]],"info":"Methode die checkt of de ingevoerde data correct zijn en de eindtijd niet voor de begintijd ligt. Wanneer dit correct is worden de data omgevormd naar een format die de grapqhlrequest kan gebruiken. Er wordt bij beide dagen een paar uur opgeteld zodat de datum correct blijft in zowel zomer en wintertijd. "},{"id":"904ce09d.baf5b","type":"graphql","z":"dd36c88f.3e1418","name":"GetRecordsOfMeter","graphql":"60557c07.c3c7a4","format":"handlebars","syntax":"mustache","template":"{\n  getMeasurementFromDatesBySignature(\n    from: \"{{payload.start}}\"\n    till: \"{{payload.until}}\"\n    id: \"{{payload.meter}}\"\n  ) {\n    p1_decoded {\n      power {\n        delivered {\n          value\n        }\n        received {\n          value\n        }\n      }\n       energy {\n        delivered {\n          value\n        }\n        received {\n          value\n        }\n      }\n    }\n    createdAt\n  }\n}","x":910,"y":180,"wires":[["935f94d1.e6fb18","ac3e05ed.4798d8"],[]],"info":"Request om alle records op te halen van een meter tussen twee bepaalde tijdstippen."},{"id":"ac3e05ed.4798d8","type":"switch","z":"dd36c88f.3e1418","name":"empty Dates check","property":"payload.getMeasurementFromDatesBySignature","propertyType":"msg","rules":[{"t":"nempty"},{"t":"empty"}],"checkall":"true","repair":false,"outputs":2,"x":900,"y":210,"wires":[["58d1ab4f.0cb284"],["a37b9ace.f134f8"]],"info":"Switch die checkt of er data in de payload zit, zal een popup in de ui geven mocht deze leeg zijn\n"},{"id":"1923b33f.aa6efd","type":"switch","z":"dd36c88f.3e1418","name":"","property":"options","propertyType":"msg","rules":[{"t":"nempty"}],"checkall":"true","repair":false,"outputs":1,"x":90,"y":780,"wires":[["f47f2f97.64e75"]]}]